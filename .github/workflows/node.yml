---
name: Test build and publish Node packages

on:
  push:
    branches:
      - "*"

jobs:
  sdk-k8s-operator:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: sources/sdk/k8s-operator

    steps:
      - name: checkout@scm
        uses: actions/checkout@master

      - name: setup@node
        uses: actions/setup-node@master
        with:
          node-version: '12.x'
          always-auth: true
          registry-url: https://npm.pkg.github.com
          scope: '@datapio'

      - name: setup@yarn
        run: npm install -g yarn

      - name: install@yarn
        run: yarn install
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_AUTH_TOKEN }}

      - name: lint@yarn
        run: yarn run lint

      - name: test@yarn
        run: yarn run test

      - name: publish@yarn
        if: github.ref == 'master'
        run: yarn publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_AUTH_TOKEN }}

      - name: notify@slack
        uses: 8398a7/action-slack@v3
        with:
          status: ${{ job.status }}
          username: CIBot
          fields: repo,message,commit,author,ref,took,job
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK }}
        if: always()

  sdk-amqp-engine:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: sources/sdk/amqp-engine

    steps:
      - name: checkout@scm
        uses: actions/checkout@master

      - name: setup@node
        uses: actions/setup-node@master
        with:
          node-version: '12.x'
          always-auth: true
          registry-url: https://npm.pkg.github.com
          scope: '@datapio'

      - name: setup@yarn
        run: npm install -g yarn

      - name: install@yarn
        run: yarn install
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_AUTH_TOKEN }}

      - name: lint@yarn
        run: yarn run lint

      - name: test@yarn
        run: yarn run test

      - name: publish@yarn
        if: github.ref == 'master'
        run: yarn publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_AUTH_TOKEN }}

      - name: notify@slack
        uses: 8398a7/action-slack@v3
        with:
          status: ${{ job.status }}
          username: CIBot
          fields: repo,message,commit,author,ref,took,job
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK }}
        if: always()

  sdk-pacman:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: sources/sdk/pacman

    steps:
      - name: checkout@scm
        uses: actions/checkout@master

      - name: setup@node
        uses: actions/setup-node@master
        with:
          node-version: '12.x'
          always-auth: true
          registry-url: https://npm.pkg.github.com
          scope: '@datapio'

      - name: setup@yarn
        run: npm install -g yarn

      - name: install@yarn
        run: yarn install
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_AUTH_TOKEN }}

      - name: lint@yarn
        run: yarn run lint

      - name: test@yarn
        run: yarn run test

      - name: publish@yarn
        if: github.ref == 'master'
        run: yarn publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_AUTH_TOKEN }}

      - name: notify@slack
        uses: 8398a7/action-slack@v3
        with:
          status: ${{ job.status }}
          username: CIBot
          fields: repo,message,commit,author,ref,took,job
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK }}
        if: always()

  pipelinerunserver-archiver:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: sources/operators/pipelinerunserver/apps/archiver

    steps:
      - name: checkout@scm
        uses: actions/checkout@master

      - name: setup@node
        uses: actions/setup-node@master
        with:
          node-version: '12.x'
          always-auth: true
          registry-url: https://npm.pkg.github.com
          scope: '@datapio'

      - name: setup@yarn
        run: npm install -g yarn

      - name: install@yarn
        run: yarn install
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_AUTH_TOKEN }}

      - name: lint@yarn
        run: yarn run lint

      - name: test@yarn
        run: yarn run test

      - name: build@yarn
        run: yarn run build

      - name: notify@slack
        uses: 8398a7/action-slack@v3
        with:
          status: ${{ job.status }}
          username: CIBot
          fields: repo,message,commit,author,ref,took,job
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK }}
        if: always()

  pipelinerunserver-worker:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: sources/operators/pipelinerunserver/apps/worker

    steps:
      - name: checkout@scm
        uses: actions/checkout@master

      - name: setup@node
        uses: actions/setup-node@master
        with:
          node-version: '12.x'
          always-auth: true
          registry-url: https://npm.pkg.github.com
          scope: '@datapio'

      - name: setup@yarn
        run: npm install -g yarn

      - name: install@yarn
        run: yarn install
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_AUTH_TOKEN }}

      - name: lint@yarn
        run: yarn run lint

      - name: test@yarn
        run: yarn run test

      - name: build@yarn
        run: yarn run build

      - name: notify@slack
        uses: 8398a7/action-slack@v3
        with:
          status: ${{ job.status }}
          username: CIBot
          fields: repo,message,commit,author,ref,took,job
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK }}
        if: always()
